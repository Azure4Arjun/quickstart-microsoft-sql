{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys two Windows Server Failover Clustering (WSFC) and SQL Server AlwaysOn Availability Group nodes. This template also deploys the require AD architecture outlined in \"Implementing Active Directory Domain Services in the AWS Cloud\" **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnetCIDRs",
                        "PublicSubnetCIDRs",
                        "RDGWCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "NATInstanceType",
                        "ADServer1InstanceType",
                        "ADServer1NetBIOSName",
                        "ADServer1PrivateIP",
                        "ADServer2InstanceType",
                        "ADServer2NetBIOSName",
                        "ADServer2PrivateIP",
                        "RDGW1InstanceType",
                        "RDGW1NetBIOSName",
                        "RDGW1PrivateIP",
                        "RDGW2InstanceType",
                        "RDGW2NetBIOSName",
                        "RDGW2PrivateIP",
                        "WSFCNodeInstanceType",
                        "WSFCNode1NetBIOSName",
                        "WSFCNode1PrivateIP1",
                        "WSFCNode1PrivateIP2",
                        "WSFCNode1PrivateIP3",
                        "WSFCNode2NetBIOSName",
                        "WSFCNode2PrivateIP1",
                        "WSFCNode2PrivateIP2",
                        "WSFCNode2PrivateIP3",
                        "Volume1Iops",
                        "Volume1Size",
                        "Volume1Type",
                        "Volume2Iops",
                        "Volume2Size",
                        "Volume2Type",
                        "Volume3Iops",
                        "Volume3Size",
                        "Volume3Type"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Active Directory Configuration"
                    },
                    "Parameters": [
                        "DomainDNSName",
                        "DomainNetBIOSName",
                        "RestoreModePassword",
                        "DomainAdminUser",
                        "DomainAdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft SQL Server Configuration"
                    },
                    "Parameters": [
                        "SQLServerVersion",
                        "SQLServiceAccount",
                        "SQLServiceAccountPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "ADServer1InstanceType": {
                    "default": "Domain Controller 1 Instance Type"
                },
                "ADServer1NetBIOSName": {
                    "default": "Domain Controller 1 NetBIOS Name"
                },
                "ADServer1PrivateIP": {
                    "default": "Domain Controller 1 Private IP Address"
                },
                "ADServer2InstanceType": {
                    "default": "Domain Controller 2 Instance Type"
                },
                "ADServer2NetBIOSName": {
                    "default": "Domain Controller 2 NetBIOS Name"
                },
                "ADServer2PrivateIP": {
                    "default": "Domain Controller 2 Private IP Address"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "DomainAdminPassword": {
                    "default": "Domain Admin Password"
                },
                "DomainAdminUser": {
                    "default": "Domain Admin User Name"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "DomainNetBIOSName": {
                    "default": "Domain NetBIOS Name"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "NATInstanceType": {
                    "default": "NAT Instance Type"
                },
                "PrivateSubnetCIDRs": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PublicSubnetCIDRs": {
                    "default": "Public Subnet 1 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RDGW1InstanceType": {
                    "default": "Remote Desktop Gateway 1 Instance Type"
                },
                "RDGW1NetBIOSName": {
                    "default": "Remote Desktop Gateway 1 NetBIOS Name"
                },
                "RDGW1PrivateIP": {
                    "default": "Remote Desktop Gateway 1 Private IP Address"
                },
                "RDGW2InstanceType": {
                    "default": "Remote Desktop Gateway 2 Instance Type"
                },
                "RDGW2NetBIOSName": {
                    "default": "Remote Desktop Gateway 2 NetBIOS Name"
                },
                "RDGW2PrivateIP": {
                    "default": "Remote Desktop Gateway 2 Private IP Address"
                },
                "RDGWCIDR": {
                    "default": "Allowed Remote Desktop Gateway External Access CIDR"
                },
                "RestoreModePassword": {
                    "default": "Restore Mode Password"
                },
                "SQLServerVersion": {
                    "default": "Version"
                },
                "SQLServiceAccount": {
                    "default": "Service Account Name"
                },
                "SQLServiceAccountPassword": {
                    "default": "Service Account Password"
                },
                "Volume1Iops": {
                    "default": "Data Volume IOPS"
                },
                "Volume1Size": {
                    "default": "Data Volume Size (GiB)"
                },
                "Volume1Type": {
                    "default": "Data Volume Type"
                },
                "Volume2Iops": {
                    "default": "Logs Volume IOPS"
                },
                "Volume2Size": {
                    "default": "Logs Volume Size (GiB)"
                },
                "Volume2Type": {
                    "default": "Logs Volume Type"
                },
                "Volume3Iops": {
                    "default": "TempDB Volume IOPS"
                },
                "Volume3Size": {
                    "default": "TempDB Volume Size (GiB)"
                },
                "Volume3Type": {
                    "default": "TempDB Volume Type"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "WSFCNodeInstanceType": {
                    "default": "WSFC Node 1 Instance Type"
                },
                "WSFCNode1NetBIOSName": {
                    "default": "WSFC Node 1 NetBIOS Name"
                },
                "WSFCNodesPrivateIP1": {
                    "default": "WSFC Node 1 Private IP Address 1"
                },
                "WSFCNodesPrivateIP2": {
                    "default": "WSFC Node 1 Private IP Address 2"
                },
                "WSFCNodesPrivateIP3": {
                    "default": "WSFC Node 1 Private IP Address 3"
                },
                "WSFCNode2NetBIOSName": {
                    "default": "WSFC Node 2 NetBIOS Name"
                }
            }
        }
    },
    "Parameters": {
        "ADServer1InstanceType": {
            "AllowedValues": [
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "m4.xlarge",
            "Description": "Amazon EC2 instance type for the first Active Directory instance",
            "Type": "String"
        },
        "ADServer1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC1",
            "Description": "NetBIOS name of the first Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer1PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.10",
            "Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1",
            "Type": "String"
        },
        "ADServer2InstanceType": {
            "AllowedValues": [
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "m4.xlarge",
            "Description": "Amazon EC2 instance type for the second Active Directory instance",
            "Type": "String"
        },
        "ADServer2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC2",
            "Description": "NetBIOS name of the second Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer2PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.10",
            "Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and that 2 AZ's must be provided unless the ThrirdAZ parameter is specified, in which case 3 AZ's must me provided.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "DedicatedHostIDNode1": {
            "Default": "",
            "Description": "Dedicated HostID for Node1, Only used if HostType is set to \"host\"",
            "Type": "String"
        },
        "DedicatedHostIDNode2": {
            "Default": "",
            "Description": "Dedicated HostID for Node2, Only used if HostType is set to \"host\"",
            "Type": "String"
        },
        "DedicatedHostIDNode3": {
            "Default": "",
            "Description": "Dedicated HostID for the optional Node3, Only used if HostType is set to \"host\"",
            "Type": "String"
        },
        "DomainAdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "StackAdmin",
            "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "example",
            "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "HostType": {
            "Default": "default",
            "AllowedValues": [
                "default",
                "dedicated",
                "host"
            ],
            "Description": "Host Type, NB: For dedicated types, you must already have suitable dedicated hosts in your account",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NATInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ],
            "Default": "t2.small",
            "Description": "Amazon EC2 instance type for the NAT Instances. This is only used if the region does not support NAT gateways.",
            "Type": "String"
        },
        "PrivateSubnetCIDRs": {
            "Default": "10.0.0.0/19,10.0.32.0/19",
            "Description": "comma separated list of CIDR blocks for private subnets, order is preserved",
            "Type": "CommaDelimitedList"
        },
        "PublicSubnetCIDRs": {
            "Default": "10.0.128.0/20,10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "CommaDelimitedList"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "microsoft/sql/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "RDGW1InstanceType": {
            "Description": "Amazon EC2 instance type for the first Remote Desktop Gateway instance",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "RDGW1NetBIOSName": {
            "Description": "NetBIOS name of the first Remote Desktop Gateway (up to 15 characters)",
            "Type": "String",
            "Default": "RDGW1",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "RDGW1PrivateIP": {
            "Description": "Fixed private IP for the first Remote Desktop Gateway located in Availability Zone 1",
            "Type": "String",
            "Default": "10.0.128.11"
        },
        "RDGW2InstanceType": {
            "Description": "Amazon EC2 instance type for the second Remote Desktop Gateway instance",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "RDGW2NetBIOSName": {
            "Description": "NetBIOS name of the second Remote Desktop Gateway (up to 15 characters)",
            "Type": "String",
            "Default": "RDGW2",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "RDGW2PrivateIP": {
            "Description": "Fixed private IP for the second Remote Desktop Gateway located in Availability Zone 2",
            "Type": "String",
            "Default": "10.0.144.11"
        },
        "RDGWCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways",
            "Type": "String"
        },
        "RestoreModePassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },
        "SQLLicenseProvided": {
            "AllowedValues": [
                "yes",
                "no"
            ],
            "Default": "no",
            "Description": "License SQL Server from AWS Marketplace. Note: this is only available for SQL 2014 and 2016, in us-east-1, us-west-2 and eu-west-1 regions and limits instance type to r3.2xlarge, r3.4xlarge and r3.8xlarge",
            "Type": "String"
        },
        "SQLServerVersion": {
            "AllowedValues": [
                "2016",
                "2014",
                "2012"
            ],
            "Default": "2014",
            "Description": "Version of SQL Server to install on WSFC Nodes. Options include either \"2014\" or \"2012\"",
            "Type": "String"
        },
        "SQLServiceAccount": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "sqlsa",
            "Description": "User name for the SQL Server Service Account. This Account is a Domain User.",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "SQLServiceAccountPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the SQL Service account. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "ThirdAz": {
            "Default": "no",
            "AllowedValues": [
                "no",
                "witness",
                "full"
            ],
            "Description": "Enable a 3 AZ deployment, the 3rd AZ can either be used just for the witness, or can be a full SQL cluster node. Note that if witness is chosen, WSFCFileServerPrivateIP must be set to an IP in the 3rd subnet range.",
            "Type": "String"
        },
        "VolumeIops": {
            "Default": "1000",
            "MinValue": "100",
            "MaxValue": "20000",
            "Description": "Provisioned Iops for the SQL Data, Logs and TempDb volumes (Only used when volume type is io1)",
            "Type": "Number"
        },
        "VolumeSize": {
            "Default": "500",
            "MinValue": "100",
            "MaxValue": "16000",
            "Description": "Volume size for the SQL Data, Logs and TempDb volumes",
            "Type": "Number"
        },
        "VolumeType": {
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1"
            ],
            "Description": "Volume type for the SQL Data, Logs and TempDb volumes",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "WSFCFileServerInstanceType": {
            "Default": "t2.small",
            "Description": "Amazon EC2 instance type for a fileserver used to share install media, witness and replication folders",
            "Type": "String"
        },
        "WSFCFileServerPrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.200",
            "Description": "Primary private IP for the fileserver located in Availability Zone 1",
            "Type": "String"
        },
        "WSFCNode1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "WSFCNode1",
            "Description": "NetBIOS name of the first WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "WSFCNode2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "WSFCNode2",
            "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "WSFCNode3NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "WSFCNode3",
            "Description": "NetBIOS name of the optional third WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "WSFCNodeInstanceType": {
            "AllowedValues": [
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge"
            ],
            "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge allowed",
            "Default": "r3.2xlarge",
            "Description": "Amazon EC2 instance type for the WSFC Nodes",
            "Type": "String"
        },
        "WSFCNodesPrivateIP1": {
            "Default": "10.0.0.100,10.0.32.100",
            "Description": "comma separated list of primary private IPs for the WSFC Nodes",
            "Type": "CommaDelimitedList"
        },
        "WSFCNodesPrivateIP2": {
            "Default": "10.0.0.101,10.0.32.101",
            "Description": "comma separated list of secondary private IPs for the WSFC Nodes",
            "Type": "CommaDelimitedList"
        },
        "WSFCNodesPrivateIP3": {
            "Default": "10.0.0.102,10.0.32.102",
            "Description": "comma separated list of the third private IPs for the WSFC Nodes",
            "Type": "CommaDelimitedList"
        }
    },
    "Conditions": {
        "IsTwoAz": {
            "Fn::Equals": [
                {
                    "Ref": "ThirdAz"
                },
                "no"
            ]
        },
        "HostTypeIsDefault": {
            "Fn::Equals": [
                {
                    "Ref": "HostType"
                },
                "default"
            ]
        },
        "HostTypeIsDediHost": {
            "Fn::Equals": [
                {
                    "Ref": "HostType"
                },
                "host"
            ]
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-aws-vpc",
                            "templates/aws-vpc.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NATInstanceType": {
                        "Ref": "NATInstanceType"
                    },
                    "NumberOfAZs": {
                      "Fn::If": [
                        "IsTwoAz",
                        "2",
                        "3"
                      ]
                    },
                    "PrivateSubnet1ACIDR": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "PrivateSubnetCIDRs"
                            }
                        ]
                    },
                    "PrivateSubnet2ACIDR": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "PrivateSubnetCIDRs"
                            }
                        ]
                    },
                    "PrivateSubnet3ACIDR": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "PrivateSubnetCIDRs"
                                    }
                                ]
                            }
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "PublicSubnetCIDRs"
                            }
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "PublicSubnetCIDRs"
                            }
                        ]
                    },
                    "PublicSubnet3CIDR": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "PublicSubnetCIDRs"
                                    }
                                ]
                            }
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "ADStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-microsoft-activedirectory",
                            "templates/ad-2012r2-1.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ADServer1InstanceType": {
                        "Ref": "ADServer1InstanceType"
                    },
                    "ADServer1NetBIOSName": {
                        "Ref": "ADServer1NetBIOSName"
                    },
                    "ADServer1PrivateIP": {
                        "Ref": "ADServer1PrivateIP"
                    },
                    "ADServer2InstanceType": {
                        "Ref": "ADServer2InstanceType"
                    },
                    "ADServer2NetBIOSName": {
                        "Ref": "ADServer2NetBIOSName"
                    },
                    "ADServer2PrivateIP": {
                        "Ref": "ADServer2PrivateIP"
                    },
                    "DomainAdminPassword": {
                        "Ref": "DomainAdminPassword"
                    },
                    "DomainAdminUser": {
                        "Ref": "DomainAdminUser"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "DomainNetBIOSName": {
                        "Ref": "DomainNetBIOSName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PrivateSubnet1CIDR": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "PrivateSubnetCIDRs"
                            }
                        ]
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2CIDR": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "PrivateSubnetCIDRs"
                            }
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "PublicSubnetCIDRs"
                            }
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "PublicSubnetCIDRs"
                            }
                        ]
                    },
                    "RestoreModePassword": {
                        "Ref": "RestoreModePassword"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Join": [
                            "/",
                            [
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "submodules/quickstart-microsoft-activedirectory"
                            ]
                        ]
                    }
                }
            }
        },
        "RDGWStack": {
            "DependsOn": "ADStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-microsoft-rdgateway",
                            "templates/rdgw-domain.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ADServer1PrivateIP": {
                        "Ref": "ADServer1PrivateIP"
                    },
                    "ADServer2PrivateIP": {
                        "Ref": "ADServer2PrivateIP"
                    },
                    "DomainAdminPassword": {
                        "Ref": "DomainAdminPassword"
                    },
                    "DomainAdminUser": {
                        "Ref": "DomainAdminUser"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "DomainMemberSGID": {
                        "Fn::GetAtt": [
                            "ADStack",
                            "Outputs.DomainMemberSGID"
                        ]
                    },
                    "DomainNetBIOSName": {
                        "Ref": "DomainNetBIOSName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RDGW1InstanceType": {
                        "Ref": "RDGW1InstanceType"
                    },
                    "RDGW1NetBIOSName": {
                        "Ref": "RDGW1NetBIOSName"
                    },
                    "RDGW1PrivateIP": {
                        "Ref": "RDGW1PrivateIP"
                    },
                    "RDGW2InstanceType": {
                        "Ref": "RDGW2InstanceType"
                    },
                    "RDGW2NetBIOSName": {
                        "Ref": "RDGW2NetBIOSName"
                    },
                    "RDGW2PrivateIP": {
                        "Ref": "RDGW2PrivateIP"
                    },
                    "RDGWCIDR": {
                        "Ref": "RDGWCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Join": [
                            "/",
                            [
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "submodules/quickstart-microsoft-rdgateway"
                            ]
                        ]
                    }
                }
            }
        },
        "SQLStack": {
            "DependsOn": "ADStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/sql.template"
                        ]
                    ]
                },
                "Parameters": {
                    "ADServer1NetBIOSName": {
                        "Ref": "ADServer1NetBIOSName"
                    },
                    "ADServer1PrivateIP": {
                        "Ref": "ADServer1PrivateIP"
                    },
                    "ADServer2NetBIOSName": {
                        "Ref": "ADServer2NetBIOSName"
                    },
                    "ADServer2PrivateIP": {
                        "Ref": "ADServer2PrivateIP"
                    },
                    "DomainAdminPassword": {
                        "Ref": "DomainAdminPassword"
                    },
                    "DomainAdminUser": {
                        "Ref": "DomainAdminUser"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "DomainMemberSGID": {
                        "Fn::GetAtt": [
                            "ADStack",
                            "Outputs.DomainMemberSGID"
                        ]
                    },
                    "DomainNetBIOSName": {
                        "Ref": "DomainNetBIOSName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PrivateSubnet1CIDR": {
                      "Fn::Select": [
                          "0",
                          {
                              "Ref": "PrivateSubnetCIDRs"
                          }
                      ]
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2CIDR": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "PrivateSubnetCIDRs"
                            }
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PrivateSubnet3CIDR": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "PrivateSubnetCIDRs"
                                    }
                                ]
                            }
                        ]
                    },
                    "PrivateSubnet3ID": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::GetAtt": [
                                    "VPCStack",
                                    "Outputs.PrivateSubnet3AID"
                                ]
                            }
                        ]
                    },
                    "SQLLicenseProvided": {
                        "Ref": "SQLLicenseProvided"
                    },
                    "SQLServerVersion": {
                        "Ref": "SQLServerVersion"
                    },
                    "SQLServiceAccount": {
                        "Ref": "SQLServiceAccount"
                    },
                    "SQLServiceAccountPassword": {
                        "Ref": "SQLServiceAccountPassword"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "WSFCNode1InstanceType": {
                        "Ref": "WSFCNodeInstanceType"
                    },
                    "WSFCNode1NetBIOSName": {
                        "Ref": "WSFCNode1NetBIOSName"
                    },
                    "WSFCNode1PrivateIP1": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "WSFCNodesPrivateIP1"
                            }
                        ]
                    },
                    "WSFCNode1PrivateIP2": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "WSFCNodesPrivateIP2"
                            }
                        ]
                    },
                    "WSFCNode1PrivateIP3": {
                        "Fn::Select": [
                            "0",
                            {
                                "Ref": "WSFCNodesPrivateIP3"
                            }
                        ]
                    },
                    "WSFCNode2InstanceType": {
                        "Ref": "WSFCNodeInstanceType"
                    },
                    "WSFCNode2NetBIOSName": {
                        "Ref": "WSFCNode2NetBIOSName"
                    },
                    "WSFCNode2PrivateIP1": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "WSFCNodesPrivateIP1"
                            }
                        ]
                    },
                    "WSFCNode2PrivateIP2": {
                      "Fn::Select": [
                          "1",
                          {
                              "Ref": "WSFCNodesPrivateIP2"
                          }
                      ]
                    },
                    "WSFCNode2PrivateIP3": {
                        "Fn::Select": [
                            "1",
                            {
                                "Ref": "WSFCNodesPrivateIP3"
                            }
                        ]
                    },
                    "WSFCNode3NetBIOSName": {
                        "Ref": "WSFCNode3NetBIOSName"
                    },
                    "WSFCNode3PrivateIP1": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "WSFCNodesPrivateIP1"
                                    }
                                ]
                            }
                        ]
                    },
                    "WSFCNode3PrivateIP2": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "WSFCNodesPrivateIP2"
                                    }
                                ]
                            }
                        ]
                    },
                    "WSFCNode3PrivateIP3": {
                        "Fn::If": [
                            "IsTwoAz",
                            {"Ref" : "AWS::NoValue"},
                            {
                                "Fn::Select": [
                                    "2",
                                    {
                                        "Ref": "WSFCNodesPrivateIP3"
                                    }
                                ]
                            }
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "Volume1Size": {
                        "Ref": "VolumeSize"
                    },
                    "Volume2Size": {
                        "Ref": "VolumeSize"
                    },
                    "Volume3Size": {
                        "Ref": "VolumeSize"
                    },
                    "Volume1Type": {
                        "Ref": "VolumeType"
                    },
                    "Volume2Type": {
                        "Ref": "VolumeType"
                    },
                    "Volume3Type": {
                        "Ref": "VolumeType"
                    },
                    "Volume1Iops": {
                        "Ref": "VolumeIops"
                    },
                    "Volume2Iops": {
                        "Ref": "VolumeIops"
                    },
                    "Volume3Iops": {
                        "Ref": "VolumeIops"
                    },
                    "HostType": {
                        "Ref": "HostType"
                    },
                    "DedicatedHostIDNode1": {
                        "Ref": "DedicatedHostIDNode1"
                    },
                    "DedicatedHostIDNode2": {
                        "Ref": "DedicatedHostIDNode2"
                    },
                    "DedicatedHostIDNode3": {
                        "Ref": "DedicatedHostIDNode3"
                    }
                }
            }
        }
    }
}
