{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys two Windows Server Failover Clustering (WSFC) and SQL Server AlwaysOn Availability Group nodes. This template is intended to be installed into an existing VPC that was built using the sample reference architecture titled: \"Implementing Active Directory Domain Services in the AWS Cloud\" **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(0003)",
    "Parameters": {
        "ADServer1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC1",
            "Description": "NetBIOS name of the first Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer1PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.10",
            "Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1",
            "Type": "String"
        },
        "ADServer2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "DC2",
            "Description": "NetBIOS name of the second Active Directory server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "ADServer2PrivateIP": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.10",
            "Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2",
            "Type": "String"
        },
        "DomainAdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DomainAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "StackAdmin",
            "Description": "User name for the account that will be used as Domain Administrator. This is separate from the default \"Administrator\" account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "DomainDNSName": {
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "Type": "String",
            "Default": "example.com",
            "MinLength": "3",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "DomainMemberSGID": {
            "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "EXAMPLE",
            "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.64.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "SQLServerVersion": {
            "AllowedValues": [
                "2014",
                "2012"
            ],
            "Default": "2014",
            "Description": "Version of SQL Server to install on WSFC Nodes. Options include either \"2014\" or \"2012\"",
            "Type": "String"
        },
        "SQLServiceAccount": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "sqlsa",
            "Description": "User name for the SQL Server Service Account. This Account is a Domain User.",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "SQLServiceAccountPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the SQL Service account. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        },
        "WSFCNode1InstanceType": {
            "AllowedValues": [
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge"
            ],
            "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge allowed",
            "Default": "r3.2xlarge",
            "Description": "Amazon EC2 instance type for the first WSFC Node",
            "Type": "String"
        },
        "WSFCNode1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "WSFCNode1",
            "Description": "NetBIOS name of the first WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "WSFCNode1PrivateIP1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.100",
            "Description": "Primary private IP for the first WSFC Node located in Availability Zone 1",
            "Type": "String"
        },
        "WSFCNode1PrivateIP2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.101",
            "Description": "Secondary private IP for WSFC cluster on first WSFC Node",
            "Type": "String"
        },
        "WSFCNode1PrivateIP3": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.0.102",
            "Description": "Third private IP for Availability Group Listener on first WSFC Node",
            "Type": "String"
        },
        "WSFCNode2InstanceType": {
            "AllowedValues": [
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge"
            ],
            "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge allowed",
            "Default": "r3.2xlarge",
            "Description": "Amazon EC2 instance type for the second WSFC Node",
            "Type": "String"
        },
        "WSFCNode2NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "WSFCNode2",
            "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "WSFCNode2PrivateIP1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.100",
            "Description": "Primary private IP for the second WSFC Node located in Availability Zone 2",
            "Type": "String"
        },
        "WSFCNode2PrivateIP2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.101",
            "Description": "Secondary private IP for WSFC cluster on second WSFC Node",
            "Type": "String"
        },
        "WSFCNode2PrivateIP3": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Default": "10.0.32.102",
            "Description": "Third private IP for Availability Group Listener on second WSFC Node",
            "Type": "String"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.08.11"
            },
            "ap-northeast-1": {
                "WS2012R2": "ami-281ad849"
            },
            "ap-northeast-2": {
                "WS2012R2": "ami-ab549ec5"
            },
            "ap-south-1": {
                "WS2012R2": "ami-4b7d0824"
            },
            "ap-southeast-1": {
                "WS2012R2": "ami-d6f32ab5"
            },
            "ap-southeast-2": {
                "WS2012R2": "ami-47bf8b24"
            },
            "eu-central-1": {
                "WS2012R2": "ami-1db84972"
            },
            "eu-west-1": {
                "WS2012R2": "ami-a8592cdb"
            },
            "sa-east-1": {
                "WS2012R2": "ami-2a70e646"
            },
            "us-east-1": {
                "WS2012R2": "ami-bd3ba0aa"
            },
            "us-west-1": {
                "WS2012R2": "ami-69febd09"
            },
            "us-west-2": {
                "WS2012R2": "ami-1712d877"
            }
        }
    },
    "Resources": {
        "WSFCNode1WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode1",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode1WaitHandle"
                },
                "Timeout": "5400"
            }
        },
        "WSFCNode1WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode2WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "WSFCNode2",
            "Properties": {
                "Handle": {
                    "Ref": "WSFCNode2WaitHandle"
                },
                "Timeout": "5400"
            }
        },
        "WSFCNode2WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WSFCNode1": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "CFNsetup",
                            "rename",
                            "join",
                            "createSqlAccount",
                            "installsql",
                            "finalize"
                        ]
                    },
                    "CFNsetup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WSFCNode1.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r WSFCNode1",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "1-execute-powershell-script-RenameComputer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Rename-Computer -NewName ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            " -Restart"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "join": {
                        "commands": {
                            "a-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "b-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-Command \"",
                                            "Add-Computer -DomainName ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "-Restart\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "createSqlAccount": {
                        "commands": {
                            "1-create-sqlacct": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Invoke-Command -Scriptblock{ New-ADUser ",
                                            "-Name ",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            " ",
                                            "-UserPrincipalName ",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "@",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " ",
                                            "-AccountPassword (ConvertTo-SecureString ",
                                            {
                                                "Ref": "SQLServiceAccountPassword"
                                            },
                                            " -AsPlainText -Force) ",
                                            "-Enabled $true ",
                                            "-PasswordNeverExpires $true -EA 0} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "installsql": {
                        "files": {
                            "C:\\cfn\\scripts\\WSFC.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "Install-WindowsFeature failover-clustering -IncludeManagementTools",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\DownloadSQLEE2.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sql/latest/scripts/DownloadSQLEE2.ps1"
                            },
                            "c:\\cfn\\scripts\\OpenWSFCPorts.bat": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sql/latest/scripts/OpenWSFCPorts.bat"
                            },
                            "C:\\cfn\\scripts\\AddUserToGroup.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "Param(",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$ServerName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$GroupName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$DomainNetBIOSName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$UserName",
                                            "\n",
                                            ")",
                                            "$de = [ADSI]\"WinNT://$ServerName/$GroupName,group\"",
                                            "\n",
                                            "$de.psbase.Invoke(\"Add\",([ADSI]\"WinNT://$DomainNetBIOSName/$UserName\").path)",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\Users\\Default\\Desktop\\InstallSQLEE.bat": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command Install-WindowsFeature NET-Framework-Core",
                                            "\n",
                                            "powershell.exe -command \"dir \\\\",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "\\sqlinstall\\*.iso | Mount-DiskImage\"",
                                            "\n",
                                            "g:\\SETUP.EXE ",
                                            "/QS ",
                                            "/Action=Install ",
                                            "/Features=SQLEngine,Replication,FullText,Conn,BOL,ADV_SSMS ",
                                            "/INSTANCENAME=MSSQLSERVER ",
                                            "/SQLSVCACCOUNT=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "\" ",
                                            "/SQLSVCPASSWORD=\"",
                                            {
                                                "Ref": "SQLServiceAccountPassword"
                                            },
                                            "\" ",
                                            "/AGTSVCACCOUNT=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "\" ",
                                            "/AGTSVCPASSWORD=\"",
                                            {
                                                "Ref": "SQLServiceAccountPassword"
                                            },
                                            "\" ",
                                            "/SQLSYSADMINACCOUNTS=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "\" ",
                                            "/SQLUSERDBDIR=\"D:\\MSSQL\\DATA\" ",
                                            "/SQLUSERDBLOGDIR=\"E:\\MSSQL\\LOG\" ",
                                            "/SQLBACKUPDIR=\"f:\\MSSQL\\Backup\" ",
                                            "/SQLTEMPDBDIR=\"f:\\MSSQL\\TempDB\" ",
                                            "/SQLTEMPDBLOGDIR=\"f:\\MSSQL\\TempDB\" ",
                                            "/IACCEPTSQLSERVERLICENSETERMS",
                                            "\n",
                                            "C:\\PROGRA~1\\MICROS~1\\CLIENT~1\\ODBC\\110\\Tools\\Binn\\SQLCMD.EXE -i c:\\cfn\\scripts\\MaxDOP.sql"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\MaxDOP.sql": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sql/latest/scripts/MaxDOP.sql"
                            }
                        },
                        "commands": {
                            "a-execute-powershell-script-WSFC": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\WSFC.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-create-folder": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {New-Item -ItemType directory -Path c:\\ -Name sqlinstall} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "c-create-share": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock { New-SmbShare -Name sqlinstall -Path c:\\sqlinstall -FullAccess everyone } -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-execute-powershell-DownloadSQLEE": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\DownloadSQLEE2.ps1 -SQLServerVersion ",
                                            {
                                                "Ref": "SQLServerVersion"
                                            },
                                            " -DestServer ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -DestShare sqlinstall"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-open-WSFC-ports": {
                                "command": "C:\\cfn\\scripts\\OpenWSFCPorts.bat"
                            },
                            "f-execute-powershell-script-AddUserToGroup": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName ",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            " -ServerName ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            " -DomainNetBIOSName ",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            " -GroupName \"Administrators\"",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "g-execute-powershell-script-AddUserToGroup": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName ",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            " -ServerName ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            " -DomainNetBIOSName ",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            " -GroupName \"Administrators\"",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "h-enable-autologon": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon -Value 1",
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName -Value ",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "@",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " | out-null",
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword -Value ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-set-startup-script": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce -Name InstallSQL -Value C:\\Users\\Default\\Desktop\\InstallSQLEE.bat",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-reboot": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Restart-Computer -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "k-force-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Invoke-Command -Scriptblock{ repadmin /syncall /A /e /P } -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-cleanup-registry": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon",
                                            ";",
                                            "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName",
                                            ";",
                                            "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "900"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "1-signal-success": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref": "WSFCNode1WaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WSFCNode1InstanceType"
                },
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "PrivateSubnet1ID"
                        },
                        "PrivateIpAddresses": [
                            {
                                "Primary": "true",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP1"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP2"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode1PrivateIP3"
                                }
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "WSFCSecurityGroup"
                            },
                            {
                                "Ref": "WSFCClientSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode1NetBIOSName"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "Volumes": [
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode1Volume1"
                        },
                        "Device": "/dev/xvdb"
                    },
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode1Volume2"
                        },
                        "Device": "/dev/xvdc"
                    },
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode1Volume3"
                        },
                        "Device": "/dev/xvdd"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode1 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode2": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "WSFCNode1WaitCondition",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "CFNsetup",
                            "rename",
                            "join",
                            "installsql",
                            "configsql",
                            "finalize"
                        ]
                    },
                    "CFNsetup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.WSFCNode2.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r WSFCNode2",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\MaxDOP.sql": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sql/latest/scripts/MaxDOP.sql"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "1-execute-powershell-script-RenameComputer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Rename-Computer -NewName ",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -Restart"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "join": {
                        "commands": {
                            "a-set-dns-servers": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                                            {
                                                "Ref": "ADServer2PrivateIP"
                                            },
                                            ",",
                                            {
                                                "Ref": "ADServer1PrivateIP"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "30"
                            },
                            "b-join-domain": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-Command \"",
                                            "Add-Computer -DomainName ",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "-Restart\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "installsql": {
                        "files": {
                            "C:\\cfn\\scripts\\WSFC.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "Install-WindowsFeature failover-clustering -IncludeManagementTools",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\OpenWSFCPorts.bat": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sql/latest/scripts/OpenWSFCPorts.bat"
                            },
                            "C:\\cfn\\scripts\\AddUserToGroup.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "Param(",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$ServerName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$GroupName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$DomainNetBIOSName,",
                                            "\n",
                                            "[Parameter(Mandatory=$True)]",
                                            "\n",
                                            "[string]$UserName",
                                            "\n",
                                            ")",
                                            "$de = [ADSI]\"WinNT://$ServerName/$GroupName,group\"",
                                            "\n",
                                            "$de.psbase.Invoke(\"Add\",([ADSI]\"WinNT://$DomainNetBIOSName/$UserName\").path)",
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "C:\\Users\\Default\\Desktop\\InstallSQLEE.bat": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command Install-WindowsFeature NET-Framework-Core",
                                            "\n",
                                            "powershell.exe -command \"dir \\\\",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "\\sqlinstall\\*.iso | Mount-DiskImage\"",
                                            "\n",
                                            "g:\\SETUP.EXE ",
                                            "/QS ",
                                            "/Action=Install ",
                                            "/Features=SQLEngine,Replication,FullText,Conn,BOL,ADV_SSMS ",
                                            "/INSTANCENAME=MSSQLSERVER ",
                                            "/SQLSVCACCOUNT=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "\" ",
                                            "/SQLSVCPASSWORD=\"",
                                            {
                                                "Ref": "SQLServiceAccountPassword"
                                            },
                                            "\" ",
                                            "/AGTSVCACCOUNT=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "\" ",
                                            "/AGTSVCPASSWORD=\"",
                                            {
                                                "Ref": "SQLServiceAccountPassword"
                                            },
                                            "\" ",
                                            "/SQLSYSADMINACCOUNTS=\"",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "\" ",
                                            "/SQLUSERDBDIR=\"D:\\MSSQL\\DATA\" ",
                                            "/SQLUSERDBLOGDIR=\"E:\\MSSQL\\LOG\" ",
                                            "/SQLBACKUPDIR=\"f:\\MSSQL\\Backup\" ",
                                            "/SQLTEMPDBDIR=\"f:\\MSSQL\\TempDB\" ",
                                            "/SQLTEMPDBLOGDIR=\"f:\\MSSQL\\TempDB\" ",
                                            "/IACCEPTSQLSERVERLICENSETERMS",
                                            "\n",
                                            "C:\\PROGRA~1\\MICROS~1\\CLIENT~1\\ODBC\\110\\Tools\\Binn\\SQLCMD.EXE -i c:\\cfn\\scripts\\MaxDOP.sql"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-execute-powershell-script-WSFC": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\WSFC.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-open-WSFC-ports": {
                                "command": "C:\\cfn\\scripts\\OpenWSFCPorts.bat"
                            },
                            "c-execute-powershell-script-AddUserToGroup": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe ",
                                            "-ExecutionPolicy",
                                            " RemoteSigned",
                                            " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName ",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            " -ServerName ",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -DomainNetBIOSName ",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            " -GroupName \"Administrators\"",
                                            "\n"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-enable-autologon": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon -Value 1",
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName -Value ",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "@",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            ";",
                                            "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword -Value ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-set-startup-script": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce -Name InstallSQL -Value C:\\Users\\Default\\Desktop\\InstallSQLEE.bat",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-reboot": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Restart-Computer -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "configsql": {
                        "files": {
                            "c:\\cfn\\scripts\\InstallWsfc.ps1": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "New-Cluster -Name WSFCluster1 -Node  ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            ",",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -StaticAddress ",
                                            {
                                                "Ref": "WSFCNode1PrivateIP2"
                                            },
                                            ",",
                                            {
                                                "Ref": "WSFCNode2PrivateIP2"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-startup-script": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce -Name InstallWSFC -Value 'powershell.exe -ExecutionPolicy RemoteSigned -Command  c:\\cfn\\scripts\\InstallWsfc.ps1'",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "1500"
                            },
                            "b-reboot": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Restart-Computer -Force"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "c-force-ad-replication": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Invoke-Command -Scriptblock{ repadmin /syncall /A /e /P } -ComputerName ",
                                            {
                                                "Ref": "ADServer2NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "300"
                            },
                            "d-create-folder": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {New-Item -ItemType directory -Path c:\\ -Name witness} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "e-create-folder2": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {New-Item -ItemType directory -Path c:\\ -Name replica} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "f-create-share": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock { New-SmbShare -Name witness -Path c:\\witness -FullAccess everyone } -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "g-create-share2": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock { New-SmbShare -Name replica -Path c:\\replica -FullAccess everyone } -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "h-set-share-permissions": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {",
                                            "    $acl = Get-Acl c:\\witness;",
                                            "    $rule = New-Object System.Security.AccessControl.FileSystemAccessRule('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\WSFCluster1$','FullControl', 'ContainerInherit, ObjectInherit', 'None', 'Allow');",
                                            "    $acl.AddAccessRule($rule);",
                                            "    Set-Acl c:\\witness $acl",
                                            "} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "i-set-share-permissions2": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {",
                                            "    $acl = Get-Acl c:\\replica;",
                                            "    $rule = New-Object System.Security.AccessControl.FileSystemAccessRule('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "SQLServiceAccount"
                                            },
                                            "','FullControl', 'ContainerInherit, ObjectInherit', 'None', 'Allow');",
                                            "    $acl.AddAccessRule($rule);",
                                            "    Set-Acl c:\\replica $acl",
                                            "} -ComputerName ",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "j-set-wsfc-cluster-quorum": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Invoke-Command -Scriptblock{ ",
                                            "Set-ClusterQuorum -NodeAndFileShareMajority \\\\",
                                            {
                                                "Ref": "ADServer1NetBIOSName"
                                            },
                                            "\\witness",
                                            " } -ComputerName ",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-enable-always-on-node1": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"",
                                            "Invoke-Command -ScriptBlock {Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned;Enable-SqlAlwaysOn -ServerInstance ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            " -Force} -ComputerName ",
                                            {
                                                "Ref": "WSFCNode1NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "l-enable-always-on-node2": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Invoke-Command -Scriptblock{ ",
                                            "Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned;Enable-SqlAlwaysOn -ServerInstance ",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -Force",
                                            " } -ComputerName ",
                                            {
                                                "Ref": "WSFCNode2NetBIOSName"
                                            },
                                            " -Credential ",
                                            "(New-Object System.Management.Automation.PSCredential('",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "\\",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "',",
                                            "(ConvertTo-SecureString ",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            " -AsPlainText -Force))) ",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "a-cleanup-registry": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command ",
                                            "\"Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon",
                                            ";",
                                            "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName",
                                            ";",
                                            "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword",
                                            "\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-signal-success": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "cfn-signal.exe -e 0 \"",
                                            {
                                                "Ref": "WSFCNode2WaitHandle"
                                            },
                                            "\""
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": {
                    "Ref": "WSFCNode2InstanceType"
                },
                "EbsOptimized": "true",
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "PrivateSubnet2ID"
                        },
                        "PrivateIpAddresses": [
                            {
                                "Primary": "true",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP1"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP2"
                                }
                            },
                            {
                                "Primary": "false",
                                "PrivateIpAddress": {
                                    "Ref": "WSFCNode2PrivateIP3"
                                }
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "DomainMemberSGID"
                            },
                            {
                                "Ref": "WSFCSecurityGroup"
                            },
                            {
                                "Ref": "WSFCClientSecurityGroup"
                            }
                        ]
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "WSFCNode2NetBIOSName"
                        }
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "VolumeType": "gp2"
                        }
                    },
                    {
                        "DeviceName": "/dev/xvdca",
                        "VirtualName": "ephemeral0"
                    }
                ],
                "Volumes": [
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode2Volume1"
                        },
                        "Device": "/dev/xvdb"
                    },
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode2Volume2"
                        },
                        "Device": "/dev/xvdc"
                    },
                    {
                        "VolumeId": {
                            "Ref": "WSFCNode2Volume3"
                        },
                        "Device": "/dev/xvdd"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r WSFCNode2 ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "WSFCNode1Volume1": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCNode1Volume2": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCNode1Volume3": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCNode2Volume1": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCNode2Volume2": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCNode2Volume3": {
            "Type": "AWS::EC2::Volume",
            "Properties": {
                "Size": "500",
                "VolumeType": "gp2",
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                }
            }
        },
        "WSFCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable the WSFC and SQL AlwaysOn Availability Group communications",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "135",
                        "ToPort": "135",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "135",
                        "ToPort": "135",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "137",
                        "ToPort": "137",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "137",
                        "ToPort": "137",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "445",
                        "ToPort": "445",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "445",
                        "ToPort": "445",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3343",
                        "ToPort": "3343",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3343",
                        "ToPort": "3343",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5022",
                        "ToPort": "5022",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5022",
                        "ToPort": "5022",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5985",
                        "ToPort": "5985",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "5985",
                        "ToPort": "5985",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "49152",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "49152",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "137",
                        "ToPort": "137",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "137",
                        "ToPort": "137",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "3343",
                        "ToPort": "3343",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "3343",
                        "ToPort": "3343",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "49152",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "49152",
                        "ToPort": "65535",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1434",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1434",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1434",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1434",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    }
                ]
            }
        },
        "WSFCClientSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SQL Client Connections from instances inside the VPC",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "CidrIp": {
                            "Ref": "PrivateSubnet1CIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1433",
                        "ToPort": "1433",
                        "CidrIp": {
                            "Ref": "PrivateSubnet2CIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "DomainAdmin": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Ref": "DomainNetBIOSName"
                        },
                        "\\",
                        {
                            "Ref": "DomainAdminUser"
                        }
                    ]
                ]
            },
            "Description": "Domain administrator account"
        },
        "LocalAdmin": {
            "Value": "Administrator",
            "Description": "Please retrieve Administrator password of the instance"
        },
        "WSFCNode1NetBIOSName": {
            "Value": {
                "Ref": "WSFCNode1NetBIOSName"
            },
            "Description": "NetBIOS name of the 1st WSFC Node"
        },
        "WSFCNode2NetBIOSName": {
            "Value": {
                "Ref": "WSFCNode2NetBIOSName"
            },
            "Description": "NetBIOS name of the 2nd WSFC Node"
        }
    }
}